name: Orchestrator CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout orchestrator (this repo)
      uses: actions/checkout@v4

    - name: Clone order-service
      run: git clone https://github.com/renatoc01/order-service.git order-service

    - name: Clone inventory-service
      run: git clone https://github.com/renatoc01/inventory-service.git inventory-service

    - name: Clone notification-service
      run: git clone https://github.com/renatoc01/notification-service.git notification-service

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker images
      run: docker compose build

    - name: Start services
      run: docker compose up -d

    - name: Wait for services to be ready
      run: sleep 20
          
    - name: Smoke Test - Create Order
      run: |
        echo "Creating order..."
        response=$(curl -s -X POST http://localhost:8080/orders \
          -H "Content-Type: application/json" \
          -d '{"item": "laptop", "quantity": 2}')
        echo "Order ID: $response"
        
        if [[ "$response" =~ ^[0-9a-fA-F-]+$ ]]; then
          echo "$response" > order_id.txt
        else
          echo "❌ Failed to create order. Response: $response"
          exit 1
        fi

    - name: Smoke Test - Ship Order
      run: |
        id=$(cat order_id.txt)
        echo "Shipping order with ID: $id"
        status=$(curl -s -o /dev/null -w "%{http_code}" -X POST http://localhost:8080/orders/$id/ship)
        if [ "$status" -ne 200 ]; then
          echo "❌ Failed to ship order. Status: $status"
          exit 1
        else
          echo "✅ Order shipped"
        fi

    - name: Smoke Test - Get Order Status
      run: |
        id=$(cat order_id.txt)
        echo "Fetching order status for ID: $id"
        response=$(curl -s http://localhost:8080/orders/$id)
        echo "$response"
        if [[ "$response" == *"SHIPPED"* ]]; then
          echo "✅ Order is shipped"
        else
          echo "❌ Order status not as expected"
          exit 1
        fi

          
    - name: Show logs from order-service
      run: docker logs $(docker ps -qf "name=order-service")

    - name: Show logs from inventory-service
      run: docker logs $(docker ps -qf "name=inventory-service")

    - name: Show logs from notification-service
      run: docker logs $(docker ps -qf "name=notification-service")


    - name: Stop services
      run: docker compose down

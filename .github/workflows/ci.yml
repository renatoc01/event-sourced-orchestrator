name: Orchestrator CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout orchestrator (this repo)
      uses: actions/checkout@v4

    - name: Clone order-service
      run: git clone https://github.com/renatoc01/order-service.git order-service

    - name: Clone inventory-service
      run: git clone https://github.com/renatoc01/inventory-service.git inventory-service

    - name: Clone notification-service
      run: git clone https://github.com/renatoc01/notification-service.git notification-service

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker images
      run: docker compose build

    - name: Start services
      run: docker compose up -d

    - name: Wait for services to be ready
      run: sleep 20

    - name: Test Order Creation Endpoint (basic smoke test)
      run: |
        curl -X POST http://localhost:8080/orders \
          -H "Content-Type: application/json" \
          -d '{"id": 1, "item": "Widget", "quantity": 10}'
          
    - name: Validate Order Creation Response
      run: |
        response=$(curl -s -o response.txt -w "%{http_code}" -X POST http://localhost:8080/orders \
          -H "Content-Type: application/json" \
          -d '{"id": 1, "item": "Widget", "quantity": 10}')
        cat response.txt
        test "$response" -eq 200

          
    - name: Show logs from order-service
      run: docker logs $(docker ps -qf "name=order-service")

    - name: Show logs from inventory-service
      run: docker logs $(docker ps -qf "name=inventory-service")

    - name: Show logs from notification-service
      run: docker logs $(docker ps -qf "name=notification-service")


    - name: Stop services
      run: docker compose down
